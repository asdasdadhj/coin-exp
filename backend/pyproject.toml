[project]
name = "crypto-tracker-backend"
version = "1.0.0"
description = "Cryptocurrency price tracker backend with Flask"
authors = [
    {name = "Crypto Tracker", email = "crypto@tracker.dev"}
]
readme = "README_CRYPTO.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["cryptocurrency", "bitcoin", "ethereum", "flask", "api"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial",
]

dependencies = [
    "flask>=2.3.0,<3.0.0",
    "requests>=2.31.0,<3.0.0",
    "werkzeug>=2.3.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/crypto-tracker/backend"
Repository = "https://github.com/crypto-tracker/backend.git"
Issues = "https://github.com/crypto-tracker/backend/issues"

[project.scripts]
crypto-tracker = "crypto_tracker:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests>=2.31.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=crypto_tracker",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
